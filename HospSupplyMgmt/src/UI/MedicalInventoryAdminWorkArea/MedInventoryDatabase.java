/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.MedicalInventoryAdminWorkArea;


import Hospital.Hospital.Hospital;
import Warehouse.MedSupInven.MedSupEquip;
import Warehouse.MedSupInven.MedSupEquipDirectory;
import System.MedicalServiceCentralisationEcoSystem;
import System.UserAccount;
import System.UserAccountDirectory;
import Warehouse.MedSupWarehouse;
import Warehouse.MedSupWarehouseDirectory;
import Warehouse.Orders.OrderDirectory;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sarth
 */
public class MedInventoryDatabase extends javax.swing.JPanel {

    JPanel userProcessContainer;
    MedicalServiceCentralisationEcoSystem medicalServiceCentralisationEcoSystem;
    UserAccount userAccount;
    UserAccountDirectory userAccountDirectory;
    MedSupEquipDirectory medSupEquipDirectory;
    MedSupWarehouse medSupWarehouseCurrent;
    public MedInventoryDatabase(JPanel userProcessContainer , MedicalServiceCentralisationEcoSystem medicalServiceCentralisationEcoSystem, MedSupWarehouse medSupWarehouse) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.medicalServiceCentralisationEcoSystem = medicalServiceCentralisationEcoSystem;
        this.medSupWarehouseCurrent = medSupWarehouse;
        if(medSupWarehouse.getMedSupEquipDirectory() == null){
            medSupWarehouse.setMedSupEquipDirectory(new MedSupEquipDirectory());
        }
        if(medSupWarehouseCurrent.getOrderDirectory()== null){
            medSupWarehouseCurrent.setOrderDirectory(new OrderDirectory());
        }
        addrecordstotable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitle = new javax.swing.JLabel();
        jButtonHome = new javax.swing.JButton();
        jButtonCreate = new javax.swing.JButton();
        jLabelPatientID = new javax.swing.JLabel();
        jTextFieldMedSupEquipName = new javax.swing.JTextField();
        jLabelPatientName = new javax.swing.JLabel();
        jLabelTitle2 = new javax.swing.JLabel();
        jTextFieldMedSupEquipPrice = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMedSupEquipDB = new javax.swing.JTable();
        jLabelPatientName1 = new javax.swing.JLabel();
        jTextFieldMedSupEquipQuantity = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 204, 255));
        setForeground(new java.awt.Color(255, 255, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelTitle.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle.setText("All Equipment");
        add(jLabelTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, 370, 706, -1));

        jButtonHome.setBackground(new java.awt.Color(255, 255, 204));
        jButtonHome.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButtonHome.setText("HOME");
        jButtonHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHomeActionPerformed(evt);
            }
        });
        add(jButtonHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 90, 110, 60));

        jButtonCreate.setBackground(new java.awt.Color(255, 255, 204));
        jButtonCreate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonCreate.setText("CREATE");
        jButtonCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateActionPerformed(evt);
            }
        });
        add(jButtonCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 220, 110, 60));

        jLabelPatientID.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelPatientID.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelPatientID.setText("Medical Equipment Name");
        add(jLabelPatientID, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 250, 20));
        add(jTextFieldMedSupEquipName, new org.netbeans.lib.awtextra.AbsoluteConstraints(311, 200, 270, -1));

        jLabelPatientName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelPatientName.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelPatientName.setText("Medical Equipment Price");
        add(jLabelPatientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 270, 30));

        jLabelTitle2.setFont(new java.awt.Font("Times New Roman", 1, 56)); // NOI18N
        jLabelTitle2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle2.setText("Medical Inventory Equipment Database");
        add(jLabelTitle2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 940, -1));
        add(jTextFieldMedSupEquipPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 240, 270, -1));

        jTableMedSupEquipDB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Medical Equipment Name", "Medical Equipment Price", "Medical Equipment Count"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableMedSupEquipDB);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 440, 530, 110));

        jLabelPatientName1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelPatientName1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelPatientName1.setText("Medical Equipment Quantity");
        add(jLabelPatientName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 260, 20));
        add(jTextFieldMedSupEquipQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 280, 270, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHomeActionPerformed
        MedInventoryAdminWorkAreaJPanel medSupWarehouseAdminWorkAreaJPanel = new MedInventoryAdminWorkAreaJPanel(userProcessContainer,medicalServiceCentralisationEcoSystem, medSupWarehouseCurrent);
        userProcessContainer.add("medSupWarehouseAdminWorkAreaJPanel",medSupWarehouseAdminWorkAreaJPanel);
        CardLayout crdLyt = (CardLayout) userProcessContainer.getLayout();
        crdLyt.show(userProcessContainer,"medSupWarehouseAdminWorkAreaJPanel");
    }//GEN-LAST:event_jButtonHomeActionPerformed

    private void jButtonCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTableMedSupEquipDB.getModel();
        MedSupWarehouseDirectory medSupWarehouseDirectory = medicalServiceCentralisationEcoSystem.getMedSupWarehouseDirectory();
        ArrayList<MedSupWarehouse> medSupWarehouseList = medSupWarehouseDirectory.getMedSupWarehouseList();
        for(MedSupWarehouse medSupWarehouse: medSupWarehouseList){
            if(medSupWarehouse.getMedSupWarehouseId().equals(medSupWarehouseCurrent.getMedSupWarehouseId())){
                MedSupEquipDirectory medSupEquipDirectory = medSupWarehouseCurrent.getMedSupEquipDirectory();
                MedSupEquip medSupEquip = new MedSupEquip();
                String medSupEquip_name = jTextFieldMedSupEquipName.getText();
                String medSupEquip_price = jTextFieldMedSupEquipPrice.getText();
                String medSupEquip_quantity = jTextFieldMedSupEquipQuantity.getText();
                medSupEquip.setMedSupEquip_name(medSupEquip_name);
                medSupEquip.setMedSupEquip_price(medSupEquip_price);
                medSupEquip.setMedSupEquip_quantity(medSupEquip_quantity);
                medSupEquip.setMedSupWarehouseId(medSupWarehouse.getMedSupWarehouseId());
                medSupEquipDirectory.addMedSupEquip(medSupEquip);
                medSupWarehouseCurrent.setMedSupEquipDirectory(medSupEquipDirectory);
                JOptionPane.showMessageDialog(this, "New MedSupEquip Information has been added.");
                model.addRow(new Object[]{medSupEquip,medSupEquip.getMedSupEquip_price(),medSupEquip.getMedSupEquip_quantity()});
                clearFields();
                
            }
        }
        
    }//GEN-LAST:event_jButtonCreateActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCreate;
    private javax.swing.JButton jButtonHome;
    private javax.swing.JLabel jLabelPatientID;
    private javax.swing.JLabel jLabelPatientName;
    private javax.swing.JLabel jLabelPatientName1;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JLabel jLabelTitle2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableMedSupEquipDB;
    private javax.swing.JTextField jTextFieldMedSupEquipName;
    private javax.swing.JTextField jTextFieldMedSupEquipPrice;
    private javax.swing.JTextField jTextFieldMedSupEquipQuantity;
    // End of variables declaration//GEN-END:variables

    private void clearFields() {
        jTextFieldMedSupEquipName.setText("");
        jTextFieldMedSupEquipPrice.setText("");
        jTextFieldMedSupEquipQuantity.setText("");
    }

    private void addrecordstotable() {
        
        medSupEquipDirectory = medSupWarehouseCurrent.getMedSupEquipDirectory();
        ArrayList<MedSupEquip> medSupEquipList = medSupEquipDirectory.getMedSupEquipList();
        DefaultTableModel model = (DefaultTableModel) jTableMedSupEquipDB.getModel();
        model.setRowCount(0);
//        DefaultComboBoxModel dc = new DefaultComboBoxModel();
        
        for(MedSupEquip medSupEquip: medSupEquipList)
        {
            model.addRow(new Object[]{medSupEquip, medSupEquip.getMedSupEquip_price(), medSupEquip.getMedSupEquip_quantity()});

        }
        jTableMedSupEquipDB.setModel(model);
    }
}
