/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.HospitalManagement.OperationalWorkArea;


import HospitalManagement.Hospital.Hospital;
import MainCentralisationSystem.MedicalServiceCentralisationEcoSystem;
import com.itextpdf.text.Document;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.DocumentException;
import userInterface.SystemAdminWorkArea.*;
import java.awt.CardLayout;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import java.io.FileNotFoundException;
import userInterface.HospitalManagement.MedTechnicalWorkArea.MedTechnicalPatientTest;

/**
 *
 * @author animeshgiri
 */
public class OperationalPatientEncounter extends javax.swing.JPanel {

    /**
     * Creates new form OperationalAccountsPage
     */
    JPanel userProcessContainer;
    public OperationalPatientEncounter(JPanel userProcessContainer) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
    }
    /*EcoSystem ecosystem;
    CustomerDirectory customerDirectory;
    UserAccount userAccount;
    Customer customer;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    public OperationalPatientEncounter(JPanel userProcessContainer , EcoSystem ecosystem) {
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
//        this.ecosystem = dB4OUtil.retrieveSystem();
        if(ecosystem.getCustomerDirectory() == null)
           ecosystem.setCustomerDirectory(new CustomerDirectory());
        initComponents();
        populateTable();
    }
*/
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitle = new javax.swing.JLabel();
        jButtonEmailPrescription1 = new javax.swing.JButton();
        jButtonCreate = new javax.swing.JButton();
        jTextFieldPatientName = new javax.swing.JTextField();
        jTextFieldPatientID = new javax.swing.JTextField();
        jLabelPatientID = new javax.swing.JLabel();
        jLabelPatientName = new javax.swing.JLabel();
        jTextFieldBloodGroup = new javax.swing.JTextField();
        jTextFieldAge = new javax.swing.JTextField();
        jLabelAge = new javax.swing.JLabel();
        jLabelBloodGroup = new javax.swing.JLabel();
        jTextFieldPulse = new javax.swing.JTextField();
        jTextFieldBloodPressure = new javax.swing.JTextField();
        jLabelDiagnosisandPrescription = new javax.swing.JLabel();
        jLabelPulse = new javax.swing.JLabel();
        jTextFieldPhoneNumber = new javax.swing.JTextField();
        jTextFieldGender = new javax.swing.JTextField();
        jLabelGender = new javax.swing.JLabel();
        jLabelPhoneNumber = new javax.swing.JLabel();
        jTextFieldWeight = new javax.swing.JTextField();
        jTextFieldHeight = new javax.swing.JTextField();
        jLabelHeight = new javax.swing.JLabel();
        jLabelEmpName4 = new javax.swing.JLabel();
        jTextFieldTemparature = new javax.swing.JTextField();
        jTextFieldBMI = new javax.swing.JTextField();
        jLabelBMI = new javax.swing.JLabel();
        jLabelTemparature = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaDiagnosisandPrescription = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaReasonForVisit = new javax.swing.JTextArea();
        jLabelBloodPressure = new javax.swing.JLabel();
        jLabelReasonforVisit = new javax.swing.JLabel();
        jButtonDownloadPrescription = new javax.swing.JButton();
        jLabelPhoneNumber1 = new javax.swing.JLabel();
        jTextFieldEmail = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 204, 255));
        setForeground(new java.awt.Color(0, 102, 102));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelTitle.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabelTitle.setForeground(new java.awt.Color(0, 102, 102));
        jLabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle.setText("Patient Encounter");
        add(jLabelTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 706, -1));

        jButtonEmailPrescription1.setBackground(new java.awt.Color(255, 255, 204));
        jButtonEmailPrescription1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButtonEmailPrescription1.setForeground(new java.awt.Color(0, 102, 102));
        jButtonEmailPrescription1.setText("Email prescription");
        jButtonEmailPrescription1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEmailPrescription1ActionPerformed(evt);
            }
        });
        add(jButtonEmailPrescription1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 670, -1, -1));

        jButtonCreate.setText("SUBMIT");
        add(jButtonCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 910, 100, 30));
        add(jTextFieldPatientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 200, 140, -1));
        add(jTextFieldPatientID, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 160, 140, -1));

        jLabelPatientID.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabelPatientID.setForeground(new java.awt.Color(0, 102, 102));
        jLabelPatientID.setText("Patient ID:");
        add(jLabelPatientID, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 160, 104, -1));

        jLabelPatientName.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabelPatientName.setForeground(new java.awt.Color(0, 102, 102));
        jLabelPatientName.setText("Patient Name:");
        add(jLabelPatientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 200, 110, 20));
        add(jTextFieldBloodGroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 320, 140, -1));
        add(jTextFieldAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 280, 140, -1));

        jLabelAge.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabelAge.setForeground(new java.awt.Color(0, 102, 102));
        jLabelAge.setText("Age :");
        add(jLabelAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 280, 40, 20));

        jLabelBloodGroup.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabelBloodGroup.setForeground(new java.awt.Color(0, 102, 102));
        jLabelBloodGroup.setText("Blood Group :");
        add(jLabelBloodGroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 320, 90, 20));
        add(jTextFieldPulse, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 400, 140, -1));
        add(jTextFieldBloodPressure, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 360, 140, -1));

        jLabelDiagnosisandPrescription.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabelDiagnosisandPrescription.setForeground(new java.awt.Color(0, 102, 102));
        jLabelDiagnosisandPrescription.setText("Diagnosis and Prescription :");
        add(jLabelDiagnosisandPrescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 550, 190, -1));

        jLabelPulse.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabelPulse.setForeground(new java.awt.Color(0, 102, 102));
        jLabelPulse.setText("Pulse :");
        add(jLabelPulse, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 400, -1, -1));
        add(jTextFieldPhoneNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 200, 140, -1));
        add(jTextFieldGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 160, 140, -1));

        jLabelGender.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabelGender.setForeground(new java.awt.Color(0, 102, 102));
        jLabelGender.setText("Gender :");
        add(jLabelGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 160, 104, -1));

        jLabelPhoneNumber.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabelPhoneNumber.setForeground(new java.awt.Color(0, 102, 102));
        jLabelPhoneNumber.setText("Phone Number :");
        add(jLabelPhoneNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 200, -1, -1));
        add(jTextFieldWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 280, 140, -1));
        add(jTextFieldHeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 240, 140, -1));

        jLabelHeight.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabelHeight.setForeground(new java.awt.Color(0, 102, 102));
        jLabelHeight.setText("Height :");
        add(jLabelHeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 240, 104, -1));

        jLabelEmpName4.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabelEmpName4.setForeground(new java.awt.Color(0, 102, 102));
        jLabelEmpName4.setText("Weight :");
        add(jLabelEmpName4, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 280, -1, -1));
        add(jTextFieldTemparature, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 360, 140, -1));
        add(jTextFieldBMI, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 320, 140, -1));

        jLabelBMI.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabelBMI.setForeground(new java.awt.Color(0, 102, 102));
        jLabelBMI.setText("B.M.I. :");
        add(jLabelBMI, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 320, 80, 20));

        jLabelTemparature.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabelTemparature.setForeground(new java.awt.Color(0, 102, 102));
        jLabelTemparature.setText("Temperature :");
        add(jLabelTemparature, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 360, -1, -1));

        jTextAreaDiagnosisandPrescription.setColumns(20);
        jTextAreaDiagnosisandPrescription.setRows(5);
        jScrollPane2.setViewportView(jTextAreaDiagnosisandPrescription);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 540, 420, 40));

        jTextAreaReasonForVisit.setColumns(20);
        jTextAreaReasonForVisit.setRows(5);
        jScrollPane3.setViewportView(jTextAreaReasonForVisit);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 470, 420, 40));

        jLabelBloodPressure.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabelBloodPressure.setForeground(new java.awt.Color(0, 102, 102));
        jLabelBloodPressure.setText("Blood Pressure :");
        add(jLabelBloodPressure, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 360, 110, 20));

        jLabelReasonforVisit.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabelReasonforVisit.setForeground(new java.awt.Color(0, 102, 102));
        jLabelReasonforVisit.setText("Reason for Visit :");
        add(jLabelReasonforVisit, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 480, 120, -1));

        jButtonDownloadPrescription.setBackground(new java.awt.Color(255, 255, 204));
        jButtonDownloadPrescription.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButtonDownloadPrescription.setForeground(new java.awt.Color(0, 102, 102));
        jButtonDownloadPrescription.setText("Download prescription");
        jButtonDownloadPrescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDownloadPrescriptionActionPerformed(evt);
            }
        });
        add(jButtonDownloadPrescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 670, -1, -1));

        jLabelPhoneNumber1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabelPhoneNumber1.setForeground(new java.awt.Color(0, 102, 102));
        jLabelPhoneNumber1.setText("Email :");
        add(jLabelPhoneNumber1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 240, -1, -1));
        add(jTextFieldEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 240, 140, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDownloadPrescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDownloadPrescriptionActionPerformed
       Document document = new Document();
       ArrayList<String> user_input = check_empty_field();
      try
      {
         PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("D:\\PatientEncounter\\Patients.pdf"));
         document.open();
         document.add(new Paragraph("\n\nName : " + user_input.get(1)));
         document.add(new Paragraph("\n\nEmail : " + user_input.get(2)));
         document.add(new Paragraph("\n\nPhone no : " +user_input.get(4)));
         document.add(new Paragraph("\n\nGender : " +user_input.get(3)));
         document.add(new Paragraph("\n\nAge : " +user_input.get(5)));
         document.add(new Paragraph("\n\nHeight : " +user_input.get(6)));
         document.add(new Paragraph("\n\nWeight : " +user_input.get(7)));
         document.add(new Paragraph("\n\nBMI : " +user_input.get(8)));
         document.add(new Paragraph("\n\nTemperature : " +user_input.get(9)));
         document.add(new Paragraph("\n\nBlood Group : " +user_input.get(10)));
         document.add(new Paragraph("\n\nBlood Pressure : " +user_input.get(11)));
         document.add(new Paragraph("\n\nPulse : " +user_input.get(12)));
         document.add(new Paragraph("\n\nReason for Visit : " +user_input.get(13)));
         document.add(new Paragraph("\n\nDiagnosis and Prescription : : " +user_input.get(14)));
         document.close();
         writer.close();
      } catch (DocumentException e2)
      {
         e2.printStackTrace();
      } catch (FileNotFoundException e1)
      {
         e1.printStackTrace();
      }
    }//GEN-LAST:event_jButtonDownloadPrescriptionActionPerformed

    private void jButtonEmailPrescription1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEmailPrescription1ActionPerformed
        try {
            // TODO add your handling code here:
            ArrayList<String> user_input = check_empty_field();
            SendMail sendMail = new SendMail();
            String message = "\n\nName : " + user_input.get(1) +
                    "\n\nEmail : " + user_input.get(2) +
                    "\n\nPhone no : " +user_input.get(4) +
                    "\n\nGender : " +user_input.get(3) +
                    "\n\nAge : " +user_input.get(5) +
                    "\n\nHeight : " +user_input.get(6)+
                    "\n\nWeight : " +user_input.get(7)+
                    "\n\nBMI : " +user_input.get(8)+ 
                    "\n\nTemperature : " +user_input.get(9)+
                    "\n\nBlood Group : " +user_input.get(10)+
                    "\n\nBlood Pressure : " +user_input.get(11)+
                    "\n\nPulse : " +user_input.get(12)+
                    "\n\nReason for Visit : " +user_input.get(13)+
                    "\n\nDiagnosis and Prescription : : " +user_input.get(14);
                    
            String subject = "Medical Test Report";
            sendMail.sendEmail(message, subject, user_input.get(2));
        } catch (IOException ex) {
            Logger.getLogger(MedTechnicalPatientTest.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonEmailPrescription1ActionPerformed
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCreate;
    private javax.swing.JButton jButtonDownloadPrescription;
    private javax.swing.JButton jButtonEmailPrescription1;
    private javax.swing.JLabel jLabelAge;
    private javax.swing.JLabel jLabelBMI;
    private javax.swing.JLabel jLabelBloodGroup;
    private javax.swing.JLabel jLabelBloodPressure;
    private javax.swing.JLabel jLabelDiagnosisandPrescription;
    private javax.swing.JLabel jLabelEmpName4;
    private javax.swing.JLabel jLabelGender;
    private javax.swing.JLabel jLabelHeight;
    private javax.swing.JLabel jLabelPatientID;
    private javax.swing.JLabel jLabelPatientName;
    private javax.swing.JLabel jLabelPhoneNumber;
    private javax.swing.JLabel jLabelPhoneNumber1;
    private javax.swing.JLabel jLabelPulse;
    private javax.swing.JLabel jLabelReasonforVisit;
    private javax.swing.JLabel jLabelTemparature;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextAreaDiagnosisandPrescription;
    private javax.swing.JTextArea jTextAreaReasonForVisit;
    private javax.swing.JTextField jTextFieldAge;
    private javax.swing.JTextField jTextFieldBMI;
    private javax.swing.JTextField jTextFieldBloodGroup;
    private javax.swing.JTextField jTextFieldBloodPressure;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldGender;
    private javax.swing.JTextField jTextFieldHeight;
    private javax.swing.JTextField jTextFieldPatientID;
    private javax.swing.JTextField jTextFieldPatientName;
    private javax.swing.JTextField jTextFieldPhoneNumber;
    private javax.swing.JTextField jTextFieldPulse;
    private javax.swing.JTextField jTextFieldTemparature;
    private javax.swing.JTextField jTextFieldWeight;
    // End of variables declaration//GEN-END:variables

    
    private ArrayList<String> check_empty_field() {
        ArrayList<String> user_input = new ArrayList<>();
        String user_patient_id = jTextFieldPatientID.getText();
        String user_patient_name = jTextFieldPatientName.getText();
        String user_patient_email = jTextFieldEmail.getText();
        String user_gender = jTextFieldGender.getText();
        String user_phone = jTextFieldPhoneNumber.getText();
        String user_age = jTextFieldAge.getText();
        String user_height = jTextFieldHeight.getText();
        String user_weigth = jTextFieldWeight.getText();
        String user_bmi = jTextFieldBMI.getText();
        String user_temperature = jTextFieldTemparature.getText();
        String user_bloodgrp = jTextFieldBloodGroup.getText();
        String user_bloodpressure = jTextFieldBloodPressure.getText();
        String user_pulse = jTextFieldPulse.getText();
        String user_reason_visit = jTextAreaReasonForVisit.getText();
        String user_prescription = jTextAreaDiagnosisandPrescription.getText();
        
        String regexEmailAddress = "^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$";
        java.util.regex.Pattern p = java.util.regex.Pattern.compile(regexEmailAddress);
        java.util.regex.Matcher m = p.matcher(user_patient_email);
        
        if(user_patient_id.isEmpty() && user_patient_name.isEmpty() && user_gender.isEmpty() && user_phone.isEmpty() && user_age.isEmpty()){
            JOptionPane.showMessageDialog(this, "Patient details can't be left empty.");
        }
        else if(user_height.isEmpty() && user_weigth.isEmpty() && user_bmi.isEmpty() && user_temperature.isEmpty() && user_bloodgrp.isEmpty() && user_bloodpressure.isEmpty() && user_pulse.isEmpty()){
            JOptionPane.showMessageDialog(this, " cant be left empty");
        }
        else if(user_reason_visit.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter the reason for visit.");
        }
        else if(user_prescription.isEmpty()){
            JOptionPane.showMessageDialog(this, "Prescription cannot be empty");
        } 
        else if(m.matches() != true){
            JOptionPane.showMessageDialog(this, "Invalid Email Address.");
        }
        else {
            user_input.add(user_patient_id);
            user_input.add(user_patient_name);
            user_input.add(user_patient_email);
            user_input.add(user_gender);
            user_input.add(user_phone);
            user_input.add(user_age);
            user_input.add(user_height);
            user_input.add(user_weigth);
            user_input.add(user_bmi);
            user_input.add(user_temperature);
            user_input.add(user_bloodgrp);
            user_input.add(user_bloodpressure);
            user_input.add(user_pulse);
            user_input.add(user_reason_visit);
            user_input.add(user_prescription);
        }
        
        
        
        
        
        return user_input;
    }
    
    
    /*
    private void populateTable() {
        
        customerDirectory = ecosystem.getCustomerDirectory();
        ArrayList<Customer> customers = customerDirectory.getCustomerList();
        DefaultTableModel model = (DefaultTableModel) customersTable.getModel();
        model.setRowCount(0);
//        DefaultComboBoxModel dc = new DefaultComboBoxModel();
        
        for(Customer c: customers)
        {
            model.addRow(new Object[]{c,c.getUserAccount().getPassword(), c.getCustomerPhone()});
//            dc.addElement(c.getCustomerName());
        }
        customersTable.setModel(model);
//        listCustomers.setModel(dc);
        dB4OUtil.storeSystem(ecosystem);
    }*/
}
